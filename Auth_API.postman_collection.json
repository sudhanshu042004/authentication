{
  "info": {
    "name": "Auth API",
    "description": "A comprehensive collection for testing the Auth API with JWT tokens, Google OAuth, and user management endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "auth-api-collection",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "jwtToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "auth": {
    "type": "noauth"
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/",
          "host": ["{{baseUrl}}"],
          "path": [""]
        },
        "description": "Simple health check endpoint to verify the server is running"
      },
      "response": []
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Test User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/signup",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "signup"]
            },
            "description": "Create a new user account with email and password"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.cookie) {",
                  "        pm.collectionVariables.set('jwtToken', response.cookie);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "User Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Authenticate user with email and password"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.cookie) {",
                  "        pm.collectionVariables.set('jwtToken', response.cookie);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Google OAuth",
      "item": [
        {
          "name": "Google OAuth Authentication",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"access_token\": \"ya29.a0AfH6SMC...\",\n  \"id_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IjE...\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/google/token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "google", "token"]
            },
            "description": "Authenticate user with Google OAuth access token"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    // The token is automatically set as a cookie",
                  "    pm.collectionVariables.set('authToken', 'google-auth-active');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Current User (Google)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/google/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "google", "me"]
            },
            "description": "Get current user information from JWT token"
          },
          "response": []
        },
        {
          "name": "Refresh Token (Google)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/google/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "google", "refresh"]
            },
            "description": "Refresh the JWT token for continued authentication"
          },
          "response": []
        },
        {
          "name": "Logout (Google)",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/google/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "google", "logout"]
            },
            "description": "Clear authentication cookies and logout user"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.collectionVariables.set('authToken', '');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "session={{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            },
            "description": "Retrieve current user's profile information"
          },
          "response": []
        },
        {
          "name": "Update User Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Cookie",
                "value": "session={{jwtToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated User Name\",\n  \"avatar\": \"https://example.com/new-avatar.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            },
            "description": "Update current user's profile information"
          },
          "response": []
        },
        {
          "name": "Delete User Account",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Cookie",
                "value": "session={{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/user",
              "host": ["{{baseUrl}}"],
              "path": ["api", "user"]
            },
            "description": "Permanently delete the current user's account"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    pm.collectionVariables.set('jwtToken', '');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set default headers for all requests",
          "pm.request.headers.add({",
          "    key: 'Accept',",
          "    value: 'application/json'",
          "});"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script for common validations",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has valid JSON', function () {",
          "    pm.response.to.have.jsonBody();",
          "});",
          "",
          "// Check for rate limiting",
          "pm.test('Not rate limited', function () {",
          "    pm.expect(pm.response.code).to.not.equal(429);",
          "});"
        ]
      }
    }
  ]
} 